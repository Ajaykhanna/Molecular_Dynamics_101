#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

../../check_GAUSSIAN.x
if( $status > 0) then
  exit(0)
endif

set sander = "${AMBERHOME}/bin/sander"
if( $?TESTsander ) then
    set sander = $TESTsander
endif

if( $?DO_PARALLEL ) then
   echo "Running $TESTsander in parallel on "`$DO_PARALLEL echo | wc -l`" cores."
else set DO_PARALLEL = ''
endif

# check on how many CPU core ORCA shall be running
if ( $?GAU_NCPUS) then
    if ( $GAU_NCPUS > 1 ) then
        echo "GAUSSIAN will run on $GAU_NCPUS CPU cores"
    endif
else
    set GAU_NCPUS = 1
    echo "GAUSSIAN will run on 1 CPU core"
    echo "(environment variable GAU_NCPUS not set)"
endif

cat > mdin <<EOF
Alanine dipeptide QM/MM HF/STO-3G/ff99SB NVE 2 steps (dt=0.5fs, no shake)
 &cntrl
  imin   = 0,           !no minimization
  irest  = 1,           !restart
  ntx    = 5,           !coordinates and velocities are read in
  cut    = 9999.9       !non-bonded interactions cutoff
  dt     = 0.0005,      !0.5fs time step
  ntb    = 0,           !no periodicity and PME off!
  ntt    = 0,           !turn off thermostat
  ntpr   = 1,           !print details to log every step
  ntwx   = 1,           !write coordinates to mdcrd every 500 steps (every 250fs)
  ntwr   = 2,           !write restart file at last step
  nstlim = 2,           !run for 2 steps
  nscm   = 0,           !No removal of COM motion,
  ioutfm = 1,           !NetCDF MDCRD.
  ntxo   = 1,           !Formatted restart file
  ifqnt  = 1,
 /
 &qmmm
  qmmask    = ':2',
  qm_theory = 'EXTERN',
 /
 &gau
  method   = 'hf',
  basis    = 'sto-3g',
  num_threads = $GAU_NCPUS,
 /
EOF

set output = aladip.hf_sto-3g.mdout
set restrt = aladip.hf_sto-3g.restrt
/bin/rm -f $output

touch dummy
$DO_PARALLEL $sander -O -p aladip.prmtop -c aladip.restrt -o $output -r $restrt < dummy || goto error

# remove info about number of threads from output as this may vary
grep -v 'num_threads' $output > tmp
mv tmp $output

../../dacdif -t 1 $output.save $output
../../dacdif -a 0.00002 $restrt.save $restrt


/bin/rm -f dummy mdin mdinfo mdcrd restrt inpfile*.xyz gau_job* old.gau_job* fort*
/bin/rm -rf 000
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
